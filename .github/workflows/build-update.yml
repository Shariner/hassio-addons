name: build and update

on:
  schedule:
    - cron: '0 12 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        addon: [ sabnzbd, sonarr, radarr, lidarr, eufy-security ]
    steps:
      - uses: actions/checkout@v2.3.3
        with:
          ref: ${{ github.head_ref }}

      - id: config
        name: Extract config version
        run: |
          CONFIG_VERSION=$(jq -r '.version' ${{ matrix.addon }}/config.json)
          CONFIG_IMAGE=$(jq -r '.image' ${{ matrix.addon }}/config.json)
          echo "::set-output name=version::${CONFIG_VERSION}"
          echo "::set-output name=image::${CONFIG_IMAGE}"

      - id: image
        name: Fetch image version
        run: |
          image_tag=$(awk '{if ($1 == "FROM") {print $2}}' ${{ matrix.addon }}/Dockerfile)
          image=$(echo ${image_tag} | awk -F':' '{print $1}')
          tag=$(echo ${image_tag} | awk -F':' '{print $2}')
          token=$(curl -sG --data-urlencode "scope=repository:${image_tag}:pull" \
            'https://ghcr.io/token' \
            | jq -r '.token')
          digest=$(curl -s \
            --header 'Accept: application/vnd.docker.distribution.manifest.v2+json' \
            --header "Authorization: Bearer ${token}" \
            "https://ghcr.io/v2/${image}/manifests/${tag}" \
            | jq -r '.config.digest')
          EXT_VERSION=$(curl -sL \
            --header "Authorization: Bearer ${token}" \
            "https://ghcr.io/v2/${image}/blobs/${digest}" \
            | jq -r '.container_config.Labels["org.opencontainers.image.version"]')
          echo "::set-output name=version::${EXT_VERSION}"

      - name: Set up QEMU
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GHCR
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.addon }}
          push: true
          tags: |
            ${{ steps.config.outputs.image }}:${{ steps.image.outputs.version }}
            ghcr.io/${{ steps.config.outputs.image }}:${{ steps.image.outputs.version }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - env:
          IMAGE_VERSION: ${{ steps.image.outputs.version }}
        run: |
          jq --arg version "$IMAGE_VERSION" '. + {version: $version}' ${{ matrix.addon }}/config.json > ${{ matrix.addon }}/updated-config.json
          mv -f ${{ matrix.addon }}/updated-config.json ${{ matrix.addon }}/config.json

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Version bump ${{ matrix.addon }} to ${{ steps.image.outputs.version }}
          file_pattern: ${{ matrix.addon }}/config.json
