name: build and update

on:
  schedule:
    - cron: '0 12 * * *'
  workflow_dispatch:
env:
  ARCH_PLATFORMS: '{"amd64":"linux/amd64","aarch64":"linux/arm64","armhf":"linux/arm/v7"}'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        addon: [ sabnzbd, sonarr, radarr, lidarr, eufy-security ]
    env:
      CONFIG_FILE: "${{ matrix.addon }}/config.json"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - id: config
        name: Extract config version
        run: |
          CONFIG_VERSION=$(jq -r '.version' "$CONFIG_FILE")
          CONFIG_IMAGE=$(jq -r '.image' "$CONFIG_FILE")
          CONFIG_PLATFORMS=$(jq --argjson archs "$ARCH_PLATFORMS" -r '.arch | map($archs[.]) | map(select(.)) | join(",")' "$CONFIG_FILE")
          echo "::set-output name=version::${CONFIG_VERSION}"
          echo "::set-output name=image::${CONFIG_IMAGE}"
          echo "::set-output name=platforms::${CONFIG_PLATFORMS}"

      - id: image
        name: Fetch image version
        run: |
          from=$(awk '{if ($1 == "FROM") {print $2}}' ${{ matrix.addon }}/Dockerfile)
          image_tag=${from#*/}
          image=${image_tag%:*}
          digest=latest
          media_type='application/vnd.docker.distribution.manifest.list.v2+json'
          token=$(curl -sG --data-urlencode "scope=repository:${image}:pull" \
            'https://ghcr.io/token' \
            | jq -r '.token')
          while [[ "$media_type" == 'application/vnd.docker.distribution.manifest.list.v2+json' ]]; do
            response=$(curl -s \
              --header 'Accept: application/vnd.docker.distribution.manifest.v2+json' \
              --header "Authorization: Bearer ${token}" \
              "https://ghcr.io/v2/${image}/manifests/${digest}")
            media_type=$(echo $response | jq -r .mediaType)
            digest=$(echo $response | jq -r '.manifests | first | .digest')
          done
          digest=$(echo $response | jq -r .config.digest)
          EXT_VERSION=$(curl -sL \
            --header "Authorization: Bearer ${token}" \
            "https://ghcr.io/v2/${image}/blobs/${digest}" \
            | jq -r '.container_config // .config | .Labels["org.opencontainers.image.version"]')
          echo "::set-output name=version::${EXT_VERSION}"

      - name: Set up QEMU
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GHCR
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        run: docker build -t ${{ matrix.addon }}:${{ github.sha }} ${{ matrix.addon }}

      - name: Test container
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: plexsystems/container-structure-test-action@v0.2.0
        with:
          image: ${{ matrix.addon }}:${{ github.sha }}
          config: ${{ matrix.addon }}/test.yaml

      - name: Push container
        if: steps.config.outputs.version != steps.image.outputs.version || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.addon }}
          platforms: ${{ steps.config.outputs.platforms }}
          push: true
          tags: |
            ${{ steps.config.outputs.image }}:${{ steps.image.outputs.version }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Update config
        env:
          IMAGE_VERSION: ${{ steps.image.outputs.version }}
        run: |
          jq --arg version "$IMAGE_VERSION" '. + {version: $version}' "$CONFIG_FILE" > "${CONFIG_FILE}.new"
          mv -f "${CONFIG_FILE}.new" "$CONFIG_FILE"

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Version bump ${{ matrix.addon }} to ${{ steps.image.outputs.version }}
          file_pattern: ${{ matrix.addon }}/config.json
